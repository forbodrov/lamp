---
- name: create database
  mysql_db:
    name: "{{ db_name }}"
    state: present
    # login_user_socket: /run/mysqld/mysqld.sock
    login_user: "root"
    login_password: "{{ mysql_root_password }}"

- name: create database user
  mysql_user:
    name: "{{ db_user }}"
    password: "{{ db_password }}"
    priv: "{{ db_name }}.*:ALL"
    state: present
    # login_user_socket: /run/mysqld/mysqld.sock
    login_user: "root"
    login_password: "{{ mysql_root_password }}"

- name: create nginx configuration
  template:
    src: wordpress.conf.j2
    dest: "/etc/nginx/sites-available/{{ nginx_config_name }}.conf"

- name: download wordpress
  get_url:
    url: "{{ wp_download_url }}"
    dest: /tmp/latest.tar.gz

- name: create wordpress directory
  file:
    path: "{{ wp_directory }}"
    state: "directory"
    owner: "www-data"
    group: "www-data"

- name: get stats of file
  stat:
    path: "{{ wp_directory }}/wp-config.php"
  register: sym

- name: unpack wordpress
  shell: "tar xvfz /tmp/latest.tar.gz -C {{ wp_directory }}"
  when: sym.stat.islnk is not defined

- name: create wp-config.php
  template:
    src: wp-config.php.j2
    dest: "{{ wp_directory }}/wp-config.php"
  when: wp_directory is defined

- name: chown {{ wp_directory }}
  shell: "chown -R www-data:www-data {{ wp_directory }}"

- name: copy wordpress-dump.sql
  template:
    src: wordpress-dump.sql.j2
    dest: "/tmp/wordpress-dump.sql"
  when: wp_directory is defined

- name: "crate db wordpress, Import from dump with using:{{ wordpress_hostname }}"
  mysql_db:
    state: import
    name: wordpress
    target: "/tmp/wordpress-dump.sql"

- name: activate nginx configuration
  file:
    src: "/etc/nginx/sites-available/{{ nginx_config_name }}.conf"
    dest: "/etc/nginx/sites-enabled/{{ nginx_config_name }}.conf"
    state: link
  notify: 
    - disabled apache2
    - restart nginx
...
